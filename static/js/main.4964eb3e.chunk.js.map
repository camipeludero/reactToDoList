{"version":3,"sources":["components/TodoItem.jsx","components/TodoList.jsx","App.jsx","index.js"],"names":["TodoItem","todo","toggleTodo","id","task","completed","type","checked","onChange","TodoList","todos","map","KEY","App","useState","setTodos","todoTaskRef","useRef","useEffect","storedTodos","JSON","parse","localStorage","getItem","setItem","stringify","newTodos","find","ref","placeholder","onClick","current","value","prevTodos","uuidv4","filter","length","ReactDOM","render","document","getElementById"],"mappings":"sKAEO,SAASA,EAAT,GAAyC,IAArBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,WACrBC,EAAwBF,EAAxBE,GAAIC,EAAoBH,EAApBG,KAAMC,EAAcJ,EAAdI,UAMlB,OACI,+BACI,uBAAOC,KAAK,WAAWC,QAASF,EAAWG,SAN3B,WACpBN,EAAWC,MAMNC,KCTN,SAASK,EAAT,GAA0C,IAAtBC,EAAqB,EAArBA,MAAOR,EAAc,EAAdA,WAC9B,OACI,6BACKQ,EAAMC,KAAI,SAACV,GAAD,OACP,cAACD,EAAD,CAAwBC,KAAMA,EAAMC,WAAcA,GAAnCD,EAAKE,SCHpC,IAAMS,EAAM,gBAEL,SAASC,IACd,MAA0BC,mBAAS,CACjC,CAAEX,GAAI,EAAGC,KAAM,2BAA4BC,WAAW,KADxD,mBAAOK,EAAP,KAAcK,EAAd,KAIMC,EAAcC,mBAEpBC,qBAAU,WACR,IAAMC,EAAcC,KAAKC,MAAMC,aAAaC,QAAQX,IACjDO,GACDJ,EAASI,KAEV,IAEHD,qBAAU,WACRI,aAAaE,QAAQZ,EAAKQ,KAAKK,UAAUf,MACxC,CAACA,IA0BJ,OACE,eAAC,WAAD,WACF,cAACD,EAAD,CAAUC,MAAOA,EAAOR,WA1BL,SAACC,GAClB,IAAMuB,EAAQ,YAAOhB,GACfT,EAAOyB,EAASC,MAAK,SAAC1B,GAAD,OAAQA,EAAKE,KAAOA,KAC/CF,EAAKI,WAAaJ,EAAKI,UACvBU,EAASW,MAuBX,uBAAOE,IAAKZ,EAAaV,KAAK,OAAOuB,YAAY,gBACjD,wBAAQC,QArBc,WACpB,IAAM1B,EAAOY,EAAYe,QAAQC,MAErB,KAAT5B,IAEHW,GAAS,SAACkB,GACR,MAAM,GAAN,mBAAWA,GAAX,CAAsB,CAAC9B,GAAI+B,cAAU9B,OAAMC,WAAW,QAGxDW,EAAYe,QAAQC,MAAQ,OAY9B,oBACA,wBAAQF,QAVe,WACrB,IAAMJ,EAAWhB,EAAMyB,QAAO,SAAClC,GAAD,OAAWA,EAAKI,aAC9CU,EAASW,IAQX,gCACA,sBAAKvB,GAAG,YAAR,uBAA+BO,EAAMyB,QAAO,SAAClC,GAAD,OAAWA,EAAKI,aAAW+B,OAAvE,6BClDFC,IAASC,OAAO,cAACzB,EAAD,IAAS0B,SAASC,eAAe,W","file":"static/js/main.4964eb3e.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport function TodoItem({ todo, toggleTodo }) {\r\n    const { id, task, completed } = todo;\r\n\r\n    const handleTodoClick = () => {\r\n        toggleTodo(id);\r\n    };\r\n\r\n    return (\r\n        <li>\r\n            <input type=\"checkbox\" checked={completed} onChange={handleTodoClick} />\r\n            {task}\r\n        </li>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { TodoItem } from './TodoItem';\r\n\r\nexport function TodoList({ todos, toggleTodo }) {\r\n    return (\r\n        <ul>\r\n            {todos.map((todo) => (\r\n                <TodoItem key={todo.id} todo={todo} toggleTodo = {toggleTodo} />\r\n            ))}\r\n        </ul>\r\n    );\r\n}\r\n","import React, { Fragment, useState, useRef, useEffect } from \"react\";\nimport { v4 as uuidv4 } from 'uuid';\nimport { TodoList } from \"./components/TodoList\";\n\nconst KEY = \"todoApp.todos\";\n\nexport function App() {\n  const [todos, setTodos] = useState([\n    { id: 1, task: \"Soy una tarea de prueba!\", completed: false }\n  ]);\n\n  const todoTaskRef = useRef();\n\n  useEffect(() => {\n    const storedTodos = JSON.parse(localStorage.getItem(KEY));\n    if(storedTodos) {\n      setTodos(storedTodos);\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(KEY, JSON.stringify(todos));\n  }, [todos]);\n \n  const toggleTodo = (id) => {\n    const newTodos = [...todos];\n    const todo = newTodos.find((todo)=>todo.id === id);\n    todo.completed = !todo.completed;\n    setTodos(newTodos);\n  };\n\n  const handleTodoAdd = () => {\n    const task = todoTaskRef.current.value;\n\n    if(task === '') return;\n\n    setTodos((prevTodos) => {\n      return [...prevTodos, {id: uuidv4(), task, completed: false }];\n    });\n\n    todoTaskRef.current.value = null;\n  };\n\n  const handleClearAll = () => {\n    const newTodos = todos.filter((todo) => !todo.completed);\n    setTodos(newTodos);\n  };\n\n  return (\n    <Fragment>\n  <TodoList todos={todos} toggleTodo={toggleTodo} />\n  <input ref={todoTaskRef} type=\"text\" placeholder=\"Nueva Tarea\"/>\n  <button onClick={handleTodoAdd}>‚ûï</button>\n  <button onClick={handleClearAll}>üóëÔ∏è</button>\n  <div id=\"todosLeft\">Te quedan {todos.filter((todo) => !todo.completed).length} tareas por terminar</div>\n  </Fragment>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { App } from './App.jsx';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}